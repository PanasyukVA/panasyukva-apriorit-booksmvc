//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace panasyukva_apriorit_booksmvc.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SelfEducationEntities : DbContext
    {
        public SelfEducationEntities()
            : base("name=SelfEducationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Author> Authors { get; set; }
        public DbSet<Book> Books { get; set; }
    
        public virtual int spAuthorEdit(ObjectParameter iD, string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAuthorEdit", iD, nameParameter);
        }
    
        public virtual ObjectResult<spAuthorGetList_Result> spAuthorGetList(Nullable<int> bookID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAuthorGetList_Result>("spAuthorGetList", bookIDParameter);
        }
    
        public virtual int spBookEdit(ObjectParameter iD, string name, string authors)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var authorsParameter = authors != null ?
                new ObjectParameter("Authors", authors) :
                new ObjectParameter("Authors", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBookEdit", iD, nameParameter, authorsParameter);
        }
    
        public virtual ObjectResult<spBookGetList_Result> spBookGetList(Nullable<int> authorID)
        {
            var authorIDParameter = authorID.HasValue ?
                new ObjectParameter("AuthorID", authorID) :
                new ObjectParameter("AuthorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBookGetList_Result>("spBookGetList", authorIDParameter);
        }
    }
}
